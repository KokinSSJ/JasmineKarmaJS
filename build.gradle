/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
//apply plugin: 'java-library'

plugins {
   // id 'com.craigburke.karma' version '1.4.4'
   id "com.moowork.grunt" version "1.2.0"
   id "com.moowork.node" version "1.2.0"
    id 'java-library'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}
/*
import org.apache.tools.ant.taskdefs.condition.Os
task karma(type: Exec) {
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine 'cmd', 'karma', 'start', '--single-run true'
  } else {
    commandLine 'karma', 'start', '--single-run true'
  }
}*/
task gruntTest(type: GruntTask) {
	dependsOn npmInstall
	dependsOn installGrunt
}

task karma(type: NodeTask, dependsOn: npmInstall, description: 'Executes karma tests in single run') {
	/*if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		script = " npm config get prefix"
	} else {
		script = 
	} */
	def karmaConfigPath = project.file("${rootProject.projectDir}/karma.conf.js").absolutePath
	script = project.file("node_modules/karma/bin/karma")
	args = ['start', karmaConfigPath, '--single-run', '--color']
	
	
	def testTask = project.tasks.findByName('test')
    if (testTask) {
        testTask.dependsOn karma
    }	
}
	